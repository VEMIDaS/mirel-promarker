plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'war'
	id 'com.palantir.docker' version '0.25.0'
}

group = 'jp.vemi'
version = '0.0.1-SNAPSHOT'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'com.h2database:h2'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.commons:commons-lang3'
	implementation 'com.google.guava:guava:30.1-jre'
	implementation 'org.apache.poi:poi:4.1.2'
	implementation('org.apache.poi:poi-ooxml:4.1.2') {
		exclude group: 'stax', module: 'stax-api'
	}
    implementation 'commons-io:commons-io:2.8.0'
	implementation 'org.freemarker:freemarker:2.3.30'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.hibernate.validator:hibernate-validator:6.0.17.Final'
	runtimeOnly 'org.glassfish:javax.el:3.0.1-b11'
}

jar {
	archiveBaseName = 'promarker'
	archiveVersion = '1.0.0'
}

docker {
	name "${project.group}/${project.name}"
    files bootJar.archiveFile.get()
    dockerfile file('./Dockerfile')
    buildArgs(['JAR_FILE': "${jar.archiveFileName.get()}"])
}
